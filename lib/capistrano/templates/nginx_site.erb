upstream unicorn_<%= application %> {
  ip_hash;
  <% roles(:app).each do |host| %>
  server <%= host.hostname %>:8000;
  <% end %>
  # server unix:/tmp/unicorn.<%= application %>.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= nginx_server_name %>;
  root <%= current_path %>/public;
  
<% if nginx_use_ssl %>
  listen 443;
  # listen 443 default ssl;
  # ssl on;
  ssl_certificate /etc/ssl/certs/<%= nginx_ssl_certificate %>;
  ssl_certificate_key /etc/ssl/private/<%= nginx_ssl_certificate_key %>;
  
  ssl_session_timeout  5m;
  
  ssl_protocols SSLv2 SSLv3 TLSv1;
  ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
  ssl_prefer_server_ciphers on;
<% end >
  
  location ~ ^/assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn_<%= application %>;
  location @unicorn_<%= application %> {
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X_FORWARDED_PROTO $scheme;
    proxy_set_header  Host $http_host;
    
    proxy_connect_timeout 3;
    proxy_read_timeout 60;
    proxy_send_timeout 60;
    
    proxy_redirect off;
    proxy_max_temp_file_size 0;
    
    proxy_pass http://unicorn_<%= application %>;
  }
  
  client_max_body_size 100M;
  
  # error_page 500 502 504 /500.html;
  # error_page 503 @503;

  # location = /50x.html {
  #   root html;
  # }

  # location = /404.html {
  #   root html;
  # }

  # location @503 {
  #   error_page 405 = /system/maintenance.html;
  #   if (-f $document_root/system/maintenance.html) {
  #     rewrite ^(.*)$ /system/maintenance.html break;
  #   }
  #   rewrite ^(.*)$ /503.html break;
  # }

  # if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
  #   return 405;
  # }

  # if (-f $document_root/system/maintenance.html) {
  #   return 503;
  # }

  # location ~ \.(php|html)$ {
  #   return 405;
  # }
}
